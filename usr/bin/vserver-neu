#!/bin/bash

FAI_ADDCLASSES=""
FAI_CONFIG_SRC=""
VSNAME=""
IP=""
SIZE=""
CONTEXT=""
DRBD=""
CRMONLY=0
ARCHITECTURE=""
[ -e /etc/cluster-tools-lihas.conf ] && . /etc/cluster-tools-lihas.conf

print_help() {
  echo "Usage: $0 --name=VSNAME --ip=IP --size=SIZE --context=CTX --drbd=DRBDNUM [--fai-classes=FAICLASS1,FAICLASS2] [--fai-config-src=git+ssh://USER@HOST/fai] [--print-crm-only]" >&2
  echo "--name:    Name of VServer" >&2
  echo "--ip:      IP of VServer" >&2
  echo "--size:    virtual disk size, e.g. 10G" >&2
  echo "--context: VServer context id" >&2
  echo "--drbd:    drbd device number to use" >&2
  echo "--fai-classes:    Use FAI to install, use these classes" >&2
  echo "--fai-config-src:    FAI_CONFIG_SRC" >&2
  echo "--print-crm-only:    just print the resulting crm resources" >&2
  echo "--arch:    choose vserver achitecture, e.g. i386 or amd64" >&2
}
error() {
  print_help
  echo "$*"
  exit 1
}
TEMP=`getopt -o h --long help,name:,ip:,size:,context:,drbd:,print-crm-only,arch: -- "$@"`
if [ $? != 0 ] ; then print_help >&2 ; exit 1 ; fi
eval set -- "$TEMP"
while true ; do
  case "$1" in
    --name)    VSNAME=$2; shift 2;;
    --ip)      IP=$2; shift 2;;
    --size)    SIZE=$2; shift 2;;
    --context) CONTEXT=$2; shift 2;;
    --drbd)    DRBD=$2; shift 2;;
    --arch)    ARCH=$2; shift 2;;
    --faiclasses)    FAI_ADDCLASSES=$2; shift 2;;
    --fai-config-src)    FAI_CONFIG_SRC=$2; shift 2;;
    --print-crm-only) CRMONLY=1; shift 1;;
    --help|-h) print_help;;
    --) shift ; break ;;
    *) echo "Unknown parameter $1, try -h" ; exit 1 ;;
  esac
done
#if [ ga$4 == ga ]; then
#  echo "usage: $0 VSNAME IP SIZE CONTEXT [DRBDNUM]" >&2
#  echo "usage: $0 test01 10.0.0.115 10G 115" >&2
#  echo "usage: $0 test01 10.0.0.115 10G 115 3" >&2
#  exit 1
#fi

if [ "x$VSNAME" == "x" ]; then
  echo "Missing --name" >&2
  print_help
  exit 1
fi
if [ "x$IP" == "x" ]; then
  echo "Missing --ip" >&2
  print_help
  exit 1
fi
if [ "x$SIZE" == "x" ]; then
  echo "Missing --size" >&2
  print_help
  exit 1
fi
if [ "x$CONTEXT" == "x" ]; then
  echo "Missing --context" >&2
  print_help
  exit 1
fi
if [ "x$ARCH" != "x" ]; then
	ARCHITECTURE="--arch $ARCH"
fi


# IF Abfragen nach dem installierten Software, die benoetigt wird
if [ ! -x /usr/bin/which    ] ; then echo "which ist nicht installiert!!!"; exit 1; fi
if [ $CRMONLY -eq 0 ]; then
	if ! which crm      >/dev/null 2>&1; then echo "Please Install crm"; exit 1; fi
	if ! which drbdadm  >/dev/null 2>&1; then echo "Please Install drbd"; exit 1; fi
	if ! which lvcreate >/dev/null 2>&1; then echo "Please Install lvm2"; exit 1; fi
fi
if ! which awk      >/dev/null 2>&1; then echo "Please Install awk"; exit 1; fi
if ! which ssh      >/dev/null 2>&1; then echo "Please Install openssh"; exit 1; fi
if ! which rsync    >/dev/null 2>&1; then echo "Please Install rsync"; exit 1; fi
if ! which mktemp   >/dev/null 2>&1; then echo "Please Install mktemp"; exit 1; fi
if ! which ipcalc   >/dev/null 2>&1; then echo "Please Install ipcalc"; exit 1; fi
if ! which debootstrap   >/dev/null 2>&1; then echo "Please Install debootstrap"; exit 1; fi
if ! which vserver   >/dev/null 2>&1; then echo "Please Install util-vserver and vserver-kernel"; exit 1; fi

BROADCAST=$(ipcalc $IP/$IF_LAN_NM | awk '$1 ~ /^Broadcast:$/ {print $2}')
. $LIHASSOURCEDIR/usr/lib/cluster-tools-lihas/drbd-functions.sh
DRBDVERSION=$(drbdversion)

if [ ga$DRBD == ga ]; then
  # Naechstes freies DRBD
  DRBD=$(drbdnextfree)
fi

if [ $DRBD -gt 99 ]; then
	error "DRBD must be <100"
fi

DRBDPORT=$(printf "%02i" $DRBD)

DUMMY=10

if [ $CRMONLY -eq 0 ]; then
	lvcreate -L$SIZE -n vs_$VSNAME $VG1
	ssh $HOST2 lvcreate -L$SIZE -n vs_$VSNAME $VG2

	cat <<-EOF > /etc/drbd.d/vs_$VSNAME.res
resource vs_$VSNAME {  
        protocol        C;
        syncer {
                rate    2000M;
        }
        on $HOST1 {
                device          /dev/drbd$DRBD;
                disk            /dev/$VG1/vs_$VSNAME;
                flexible-meta-disk      internal;
                address         $IP_DRBD1:77$DRBDPORT;
        }
        on $HOST2 {
                device          /dev/drbd$DRBD;
                disk            /dev/$VG2/vs_$VSNAME;
                flexible-meta-disk      internal;
                address         $IP_DRBD2:77$DRBDPORT;
        }
}
EOF

	rsync -rlHpogDtSvx /etc/drbd.d $HOST2:/etc/
	yes yes | drbdadm create-md vs_$VSNAME
	drbdadm up vs_$VSNAME
	ssh $HOST2 "(yes yes | drbdadm create-md vs_$VSNAME && drbdadm up vs_$VSNAME)"

	drbdprimaryforce $DRBDVERSION vs_$VSNAME

	mkfs.ext4 -L vs_$VSNAME /dev/drbd$DRBD
	mount /dev/drbd$DRBD /mnt
  if [ "x$FAI_ADDCLASSES" != "x" ] && [ "x$FAI_CONFIG_SRC" != "x" ]; then
    echo FAI not implemented
    exit 1
    vserver $VSNAME build --context $CONTEXT --interface $IF_LAN:$IP/$IF_LAN_NM --hostname $VSNAME -m fai -- -f fai 
  else
		vserver $VSNAME build --context $CONTEXT --interface $IF_LAN:$IP/$IF_LAN_NM --hostname $VSNAME -m debootstrap -- -d $DEBIANDIST  -- $ARCHITECTURE --include=vim,etckeeper,less,nullmailer,bash-completion,bash-builtins,strace,lsof,debconf-utils,heirloom-mailx,bind9-host,busybox,sysvinit-core --exclude=dmidecode,isc-dhcp-client,isc-dhcp-common,kmod,nano,ifupdown,iptables --components=main,contrib,non-free
		cat $VSERVER_TEMPLATE/etc/apt/sources.list > /etc/vservers/"$VSNAME"/etc/apt/sources.list
  fi
	sed -i '/tmpfs/d' /etc/vservers/$VSNAME/fstab
	sed -i -e '/#HWCLOCKACCESS=yes$/aHWCLOCKACCESS=no' /etc/vservers/"$VSNAME"/vdir/etc/default/hwclock
	ln -sf /proc/mounts /etc/vservers/"$VSNAME"/vdir/etc/mtab
	ln -sf bash /etc/vservers/"$VSNAME"/vdir/bin/sh
	sed -i -e 's/\(^[^#].*getty.*$\)/#\1/' /etc/vservers/"$VSNAME"/vdir/etc/inittab
	sed -i -e '/imklog/s/^/#/' /etc/vservers/"$VSNAME"/vdir/etc/rsyslog.conf
	echo "Europe/Berlin" > /etc/vservers/"$VSNAME"/vdir/etc/timezone
	echo . /etc/bash_completion >> /etc/vservers/"$VSNAME"/vdir/root/.bashrc
	echo export HISTTIMEFORMAT=\"%Y-%m-%d -- %H:%M:%S \" >> /etc/vservers/"$VSNAME"/vdir/root/.bashrc
	echo export HISTSIZE=50000 >> /etc/vservers/"$VSNAME"/vdir/root/.bashrc
	rm /etc/vservers/"$VSNAME"/vdir/etc/rc6.d/*{???hwclock.sh,???umountnfs.sh,???umountfs,???umountroot}

	touch /etc/vservers/$VSNAME/interfaces/0/nodev
	mv $VSERVER_BASE/$VSNAME/* /mnt/
	umount /mnt 

	ssh $HOST2 mkdir $VSERVER_BASE/$VSNAME

	rsync -rlHpogDtSvx /etc/vservers $HOST2:/etc/
fi

cat <<EOF | if [ $CRMONLY -eq 0 ]; then crm configure; else cat; fi
primitive res_drbd_drbd$DRBD_$VSNAME ocf:linbit:drbd \
        params drbd_resource="vs_$VSNAME" stop_outdates_secondary=true unfence_extra_args=false \
        operations \$id="res_drbd_drbd$VSNAME-operations" \
        op start interval="0" timeout="240" \
        op promote interval="0" timeout="90" \
        op demote interval="0" timeout="90" \
        op stop interval="0" timeout="100" \
        op monitor interval="10" timeout="20" start-delay="0" \
        op notify interval="0" timeout="90"
ms ms_$VSNAME res_drbd_drbd$DRBD_$VSNAME \
        meta notify="true" migration-threshold="10"
primitive res_fs_$VSNAME ocf:heartbeat:Filesystem \
        params device="/dev/drbd$DRBD" directory="$VSERVER_BASE/$VSNAME" fstype="ext4" options="noatime,stripe=64,barrier=0" \
        operations \$id="res_fs_$VSNAME-operations" \
        op start interval="0" timeout="600" \
        op stop interval="0" timeout="60" \
        op monitor interval="20" timeout="40" start-delay="0" \
        op notify interval="0" timeout="60"
primitive res_IPaddr2_ip_$VSNAME ocf:heartbeat:IPaddr2 \
        params ip="$IP" nic="$IF_LAN" cidr_netmask="$IF_LAN_NM" broadcast="$BROADCAST" \
        operations \$id="res_IPaddr2_ip_$VSNAME-operations" \
        op start interval="0" timeout="20" \
        op stop interval="0" timeout="20" \
        op monitor interval="10" timeout="20" start-delay="0"
primitive res_VServer-lihas_vs_$VSNAME ocf:lihas:VServer-lihas \
        params vservername="$VSNAME" \
        operations \$id="res_VServer-lihas_vs_$VSNAME-operations" \
        op start interval="0" timeout="600" \
        op stop interval="0" timeout="180" \
        op monitor interval="10" timeout="20" start-delay="5"
group grp_$VSNAME res_fs_$VSNAME res_IPaddr2_ip_$VSNAME res_VServer-lihas_vs_$VSNAME
colocation col_grp_$VSNAME-ms_$VSNAME inf: grp_$VSNAME ms_$VSNAME:Master
order ord_ms_$VSNAME-grp_$VSNAME inf: ms_$VSNAME:promote grp_$VSNAME:start
commit
EOF

if [ $CRMONLY -eq 0 ]; then
	if [ "x$VSHOOKPOST" != "x" ]; then
	  export VSNAME
	  export IP
	  export SIZE
	  export CONTEXT
	  $VSHOOKPOST
	fi
fi
# vim: ts=2 sw=2 sts=2 sr noet
