#!/bin/bash

[ -e /etc/cluster-tools-lihas.conf ] && . /etc/cluster-tools-lihas.conf
CRMONLY=0
KVMNAME=""
SIZE=""
DRBD=""

print_help() {
	echo "Usage: $0 --name=KVMNAME" >&2
	echo "--name: Name of KVM" >&2
	echo "DELETES a KVM AND ALL DATA" >&2
	echo "THE DATA IS GONE AFTERWARDS" >&2
	echo "Things that are gone include: HA-configuration for kvm and drbd, drbd-configuration, libvirt-configuration, logical volumes" >&2
}
error() {
  print_help
  echo "$*"
  exit 1
}
TEMP=`getopt -o h --long help,name: -- "$@"`
if [ $? != 0 ] ; then print_help >&2 ; exit 1 ; fi
eval set -- "$TEMP"
while true ; do
	case "$1" in
		--name) KVMNAME=$2; shift 2;;
		--help|-h) print_help;;
		--) shift ; break ;;
		*) echo "Unknown parameter $1i, try -h" ; exit 1 ;;
	esac
done

if [ "x$KVMNAME" == "x" ]; then
	echo "Missing --kvmname" >&2
	print_help
	exit 1
fi

#if [ ga$2 == ga ]; then
#  echo "usage: $0 KVMNAME SIZE [DRBDNUM]" >&2
#  echo "  z.B. $0 test01 30G" >&2
#  echo "  z.B. $0 test01 30G 3" >&2
#  exit 1
#fi

VIRSHINSTANCES="qemu:///system qemu+ssh://$HOST2/system"
. $LIHASSOURCEDIR/usr/lib/cluster-tools-lihas/drbd-functions.sh
DRBDVERSION=$(drbdversion)
# different MACs per cluster
MACBASE=$(hostname | md5sum | awk '{printf("52:54:%02s:%02s:%02s\n", substr($1,1,2), substr($1,3,2), substr($1,5,2)) }')

# IF Abfragen nach dem installierten Software, die benoetigt wird
if [ ! -x /usr/bin/which ] ; then echo "which ist nicht installiert!!!"; exit 1; fi
if ! which crm >/dev/null ; then echo "Please Install crm"; exit 1; fi
if ! which drbdadm >/dev/null ; then echo "Please Install drbd"; exit 1; fi
if ! which awk >/dev/null ; then echo "Please Install awk"; exit 1; fi
if ! which sort >/dev/null ; then echo "Please Install sort"; exit 1; fi
if ! which tail >/dev/null ; then echo "Please Install tail"; exit 1; fi
if ! which printf >/dev/null ; then echo "Please Install printf"; exit 1; fi
if ! which ssh >/dev/null ; then echo "Please Install openssh"; exit 1; fi
if ! which lvremove >/dev/null ; then echo "Please Install lvm2"; exit 1; fi
if ! which rsync >/dev/null ; then echo "Please Install rsync"; exit 1; fi
if ! which mktemp >/dev/null ; then echo "Please Install mktemp"; exit 1; fi
if ! which virsh >/dev/null ; then echo "Please Install libvirt-bin"; exit 1; fi
if ! which xmlstarlet >/dev/null ; then echo "Please Install xmlstarlet"; exit 1; fi

# VirtualDomain from resource-agents 3.9.3+git20121009-3.1 deletes the config from libvirtd
VIRTUALDOMAINKILL=0
if OCF_ROOT=/usr/lib/ocf /usr/lib/ocf/resource.d/heartbeat/VirtualDomain meta-data 2>/dev/null | xmlstarlet sel -t -v //parameter/@name 2>/dev/null | grep -q autoset_utilization_cpu; then
	VIRTUALDOMAINKILL=1
	mkdir -p /var/lib/libvirt/conf
fi
if [ -x /etc/init.d/libvirt-bin ]; then
	LIBVIRTSERVICE=/etc/init.d/libvirt-bin
elif [ -x /etc/init.d/libvirtd ]; then
	LIBVIRTSERVICE=/etc/init.d/libvirtd
else
	echo "Neither /etc/init.d/libvirt-bin, nor /etc/init.d/libvirtd is executable" >&2
	exit 1
fi

DUMMY=10

echo "Stop HA Services res_VirtualDomain_kvm_$KVMNAME and ms_$KVMNAME"
crm --wait resource stop res_VirtualDomain_kvm_$KVMNAME
crm --wait resource demote ms_$KVMNAME
crm --wait resource stop ms_$KVMNAME
crm --wait resource stop p_$KVMNAME
crm --wait resource stop p_$KVMNAME:0
crm --wait resource stop p_$KVMNAME:1
echo "Delete HA Services res_VirtualDomain_kvm_$KVMNAME and ms_$KVMNAME"
crm --wait configure delete res_VirtualDomain_kvm_$KVMNAME
crm --wait configure delete p_$KVMNAME
crm --wait configure delete ms_$KVMNAME
while crm resource status ms_argl ; do
	sleep 2
done
echo "Undefining KVM in libvirt"
for virshinstance in $VIRSHINSTANCES; do
	virsh -c $virshinstance undefine $KVMNAME
	virsh -c $virshinstance pool-destroy $KVMNAME
	virsh -c $virshinstance pool-delete $KVMNAME
done
rm /etc/libvirt/storage/autostart/$KVMNAME.xml
ssh $HOST2 rm /etc/libvirt/storage/autostart/$KVMNAME.xml
echo "Shutting down DRBD kvm_$KVMNAME"
drbdadm down kvm_$KVMNAME
ssh $HOST2 drbdadm down kvm_$KVMNAME
echo "Removing DRBD configuration"
rm /etc/drbd.d/kvm_$KVMNAME.res
ssh $HOST2 rm /etc/drbd.d/kvm_$KVMNAME.res
echo "Deleting LVs"
lvremove --force /dev/$VG1/kvm_$KVMNAME
ssh $HOST2 lvremove --force /dev/$VG2/kvm_$KVMNAME

# vim: ts=2 sw=2 sts=2 sr noet
